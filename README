# Django Docker Deployment

This repository demonstrates **3 different ways to containerize a Django application** using Docker. Each approach is implemented on a separate branch to help you learn and compare different containerization strategies.

## ðŸŒŸ Repository Structure

| Branch | Approach | Description |
|--------|----------|-------------|
| `main` | Basic Docker Setup | Simple Dockerfile with environment variable management |
| `Creating-Docker-image-from-Dockerfile` | Advanced Dockerfile | Enhanced Dockerfile with optimizations and best practices |
| `Docker-Compose` | Docker Compose | Multi-service setup with database, Redis, and Django |
| `Multi-stage-Build-Docker` | Multi-stage Build | Production-optimized build with separate stages |

## ðŸš€ Quick Start

1. **Clone the repository**:
   ```bash
   git clone <repository-url>
   cd deploydockerdj
   ```

2. **Choose your approach**:
   ```bash
   # For Docker Compose approach
   git checkout Docker-Compose
   
   # For Multi-stage build approachgit rebase --quit
   git checkout Multi-stage-Build-Docker
   
   # For advanced Dockerfile approach
   git checkout Creating-Docker-image-from-Dockerfile
   ```

3. **Follow the instructions in each branch's README for specific setup steps**

## ðŸ“š What You'll Learn

- **Basic Containerization**: Environment variables, port mapping, and Docker basics
- **Advanced Dockerfile Techniques**: Layer optimization, multi-stage builds, and security best practices  
- **Orchestration**: Managing multiple services with Docker Compose
- **Production Deployment**: Optimized builds for production environments
